@charset 'utf-8';

// Import base (variables and mixins), typography and general colors
@import 'base/_all',
        'fonts/_all',
        'colors/variables';


// Get transition for color changes
$change-transition: {{ .Scratch.Get "changeTransition" }};



// Default size
:root {
  font-size: $font-size;
}


html {
  scroll-behavior: smooth;
  
  // Light mode
  &[data-mode='light'] {
    --bg: #{$light-background};
    --fg: #{$light-foreground};
    
    --alt-bg: #{$light-alt-background};
    --alt-fg: #{$light-alt-foreground};
    
    --dtl: #{$light-details};

    --bgmod: #{$light-bg-modifier};

    --input-bg: #{$light-input-background};
    --input-fg: #{$light-input-foreground};
    --input-bd: #{$light-input-border};

    --lpress: #{$light-letterpress};
    --rlpress: #{$dark-letterpress};

    // Custom Chroma stylesheet
    {{ if .Site.Params.Style.useCustomChroma | default true }}
    
      {{ if (fileExists "static/css/chroma/light.css") }}
        @import '/css/chroma/light.css';
      {{ else }}
        @import 'colors/chroma/light';
      {{ end }}
      
    {{ end }}

  }
  
  // Dark mode
  &[data-mode='dark'] {
    --bg: #{$dark-background};
    --fg: #{$dark-foreground};
    
    --alt-bg: #{$dark-alt-background};
    --alt-fg: #{$dark-alt-foreground};
    
    --dtl: #{$dark-details};

    --bgmod: #{$dark-bg-modifier};

    --input-bg: #{$dark-input-background};
    --input-fg: #{$dark-input-foreground};
    --input-bd: #{$dark-input-border};

    --lpress: #{$dark-letterpress};
    --rlpress: #{$light-letterpress};

    // Lazy way to deter images that can be too bright
    img {
      filter: $img-filter;
    }
    
    // Custom Chroma stylesheet
    {{ if .Site.Params.Style.useCustomChroma | default true }}
    
      {{ if (fileExists "static/css/chroma/dark.css") }}
        @import '/css/chroma/dark.css';
      {{ else }}
        @import 'colors/chroma/dark';
      {{ end }}
      
    {{ end }}

  }
  
}



body {
  
  // Some reset
  margin: 0;
  padding: 0;

  font-family: $body-font;

  a {
    color: var(--accent);

    outline: 2px dashed transparent;
    outline-offset: 2px;
    
    transition:
      opacity .2s ease-in-out,
      outline .2s ease-in-out,
      padding .2s ease-in-out;
    
    &:focus {
      outline-color: var(--accent);
    }
    
    &:hover {
      opacity: .75;
    }
    
    word-break: break-word;
  }
  
  background: var(--bg);
  color: var(--fg);
  
  // https://philipwalton.github.io/solved-by-flexbox/demos/sticky-footer/
  display: flex;
  min-height: 100vh;
  flex-direction: column;
  
  > header,
  > footer {
    background: var(--alt-bg);
    color: var(--alt-fg);
    
    text-align: center;
  }
  
  > header {
  
    padding: 0 2rem 1rem;

    nav {
      margin: .5rem 0 0;
      
      ul {
        margin: 0;
        
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        
        padding: 0;
        
        a {
          display: block;
          
          word-break: keep-all;
          
          margin: 0 7.5px 15px;
          padding: 9px 21px 12px;

          font-size: .75rem;
          font-weight: $body-bold-weight;
          text-transform: uppercase;
        }
      }
    }
  }
  
  > footer {
    padding: 18px 45px;
    
    p {
      line-height: 1.8rem;
      margin: 15px 0;
      
      // HACK
      // Render "\n" as a line break in the copyright (from config)
      white-space: pre-wrap;
    }
    
    a {
      transition:
        opacity .2s ease-in-out,
        padding .2s ease-in-out,
        outline-color $change-transition;

      &:hover {
        opacity: .75;
      }
    }
    
    section {
      padding: 6px 0 12px;

      input {
        border: 1px solid var(--fg);
        outline-offset: 3px;
        
        padding: 0;
        
        &::-webkit-color-swatch {
          border: none;
        }
        
        &::-webkit-color-swatch-wrapper {
          padding: 0;
        }
        
      }

      button {
        background: 0;
        border: 0;
        
        padding: 3px 3px 0;
        
        svg {
          fill: var(--fg);
          
          stroke: var(--fg);
          stroke-width: .6rem;
        }
      }
      
      input,
      button {
        margin: 0 7.5px;
        outline: 2px dashed transparent;
        
        cursor: pointer;
        
        transition:
          outline .2s ease-in-out,
          transform .2s ease-in-out;
          
        &:focus {
          outline-color: var(--accent);
        }
        
        &:hover {
          transform: scale(1.2);
        }

        // HACK
        // Override Firefox unnecessary extra inner outline
        &::-moz-focus-inner {
          border: 0;
        }
      }
      
      input,
      button svg {
        @include squared(42px);
      }
    }
  }
}


ol,
ul {
  list-style: none;
}


// Heading 1
h1 {
  @include letterpress(var(--rlpress));
}

// Separator
hr {
  border: 1px solid var(--lpress);
  margin: 2.4rem 0 1.2rem;
}

// Selection
::selection {
  background: var(--accent);
  color: $selected-fg;
  text-shadow: none;
}

// Sticky Footer
div.filler {
  flex: 1;

  align-items: center;
  justify-content: center;
}



article > header {
  h1 {
    line-height: 3rem;
  }
  
  img {
    margin: 1rem 0 0;
  }
  
  p {
    font-size: .9rem;
    font-style: italic;
  }
}


// Typography
%heading-base {
  font-family: $heading-font;
  font-weight: $heading-weight;
}

@for $i from 1 through 6 {
  h#{$i} {
    @extend %heading-base;
    
    font-size: 1rem + $heading-scaling * (6 - $i);
  }
}


main {
  p {
    line-height: 1.65rem;
  }
}

code {
  font-family: $code-font;
}





{{ if not (or (templates.Exists "partials/custom/header") (templates.Exists "partials/custom/header.html")) }}
  body > header {
    > a {
      font-family: $heading-font;
      font-size: 2.1rem;
      font-weight: $heading-weight;
      
      transition:
        color $change-transition,
        opacity .2s ease-in-out,
        outline-color $change-transition;
      
      @include letterpress(var(--rlpress));
      
      display: inline-block;
      margin: 1.5rem 0 .75rem;
    }
  }
{{ end }}


// WHITE SPACE
article > header {
  margin: 0 0 2rem;

  h1 {
    //margin: 1.5rem 0; // 30px 0 15px;
    margin: 9px 0;
  }
  
  p {
    margin: 0;
  }
}

article,
main.index {
  
  h2,
  h3 {
    margin: 2rem 0 1rem;
  }
  
  p {
    margin: 1.5rem 0;
  }
}

%reset-top {
  margin-top: 0;
}

@for $i from 1 through 6 {
  h#{$i} + p {
    @extend %reset-top;
  }
}

%padding-top {
  padding-top: 1rem;
}

@for $i from 2 through 6 {
  h#{$i} {
    @extend %padding-top;
  }
}

audio,
img,
video {
  margin: 1.8rem auto;
}


// ANCHOR LINKS
a.anchor {
  background-image: none;

  svg {
    fill: var(--accent);
    
    vertical-align: middle;
    
    @include squared(24px);
  }
}


// Resize the anchor SVG depending on the heading level
// Also minor spacing ajustment
@for $i from 2 through 6 {
  h#{$i} {
    a.anchor {
      margin: 0 0 0 (.25rem + .1 * (6 - $i));
      
      svg {
        transform: scale(1 + .175 * (6 - $i));
      }
    }
  }
}


// Avoid accidental selection
span.lnt,
summary,
sup.footnote-ref {
  user-select: none;
}


// Lists in general
article ol,
article > ul,
#error ul {
  li {
    margin-bottom: .45rem;
  }
}





ol {
  counter-reset: a-counter;
  
  li {
    counter-increment: a-counter;
    
    &::before {
      content: counter(a-counter) '';
      
      font-size: .85rem;
      font-weight: $body-bold-weight;

      @include letterpress(var(--lpress));

      background: var(--fg);
      border: 1px solid var(--lpress);
      border-radius: $border-radius;
      color: var(--bg);
      
      margin-right: 12px;
      padding: 2px 7.5px; // 3px 7.5px;
    }
  }
}







// FOOTNOTES
section.footnotes {
  border-top: 2px solid var(--fg);
  
  // HACK
  // Some problem caused by flex?
  display: block;
  
  margin-top: 2.4rem;
  padding: 1rem 1rem 1.8rem;
  
  h2 {
    margin: 0 0 2rem;
  }
  
  a {
    word-break: break-word;
  }
  
  ol li p:first-of-type {
    display: inline;
    
    // BUG
    // For some reason, here there's <p> inside the <li> since 0.60
    // Maybe it's there to allow multiline footnotes?
    // The problem is, Chrome is complaining about a11y issues
    // No idea about what to do about it or even what to blame
    // Lighthouse? Goldmark? Something I did?
    
    // HACK
    // This should be useless out of development if using minification (that should strip the white space)
    {{ if .Site.IsServer }}
      margin-left: -6px;
    {{ end }}
  }
  
  // BUG
  // For some reason, this will be rendered differently in different browsers and platforms
  // The "↩" symbol can be centered inside the button or not
  // I can't really find a pattern (between browsers and/or platforms)
  // Kind of solved by replacing the "↩" symbol with a SVG (or plain text)
  a.footnote-backref {
    margin: 0 0 0 9px;
    
    {{ if .Site.Params.Style.hasIconAsFootnoteReturnLink }}
      
      padding: 0 9px;
      vertical-align: middle;
      
      svg {
        fill: var(--dtl);
        
        stroke: var(--lpress);
        stroke-width: .6rem;
        
        @include squared(18px);
      }
    
    {{ else }}
    
      padding: 0 15px 4.5px;
      vertical-align: top;
      
      font-size: .75rem;
      text-transform: lowercase;
      
      word-break: break-word;
    
    {{ end }}
  }

  // HACK
  // Ignore the default (markdown-generated) separator before footnotes
  hr {
    display: none;
  }
}

// Trying something Wikipedia-like
sup {
  line-height: 0;

  a.footnote-ref {
    text-decoration: none;
    
    &::before {
      content: '[';
    }

    &::after {
      content: ']';
    }
  }
}





// For mode change animation
code,
.chroma,
.chroma span {
  transition:
    background-color $change-transition,
    color $change-transition;
}


article > pre,
section.scroll,
span.katex-display,
div.highlight > pre,
div.highlight > div {

  overflow-x: auto;
  
  transition:
    background-color $change-transition,
    color $change-transition,
    outline-color .3s ease;
  
  outline: 3px solid transparent;
  
  &:focus {
    outline-color: var(--accent);
  }
}


// TABLE
section.scroll {
  
  border: 1px solid var(--fg);
  
  & > table {
    border-collapse: collapse;
    color: var(--fg);
    
    font-family: $body-font;

    min-width: 600px;
    width: 100%;

    td + td {
      border-left: 1px solid var(--fg);
    }
        
    tr + tr {
      border-top: 1px solid var(--fg);
    }

    tr:not(:first-child):last-of-type {
      border-bottom: 1px solid var(--fg);
    }

    td,
    th {
      padding: 9px;
    }
    
    th {
      background: var(--fg);
      color: var(--bg);
    }

    tr {
      transition:
        background .2s ease-in-out,
        color .2s ease-in-out;
      
      &:nth-child(even) {
        background: var(--alt-bg);
      }
      
      &:nth-child(odd) { 
        background: var(--bg);
      }
      
      &:hover {
        background: var(--accent);
        color: var(--dtl);
      }
    }
  }
}



// TODO
// Get rid of this !important
div.highlight > div table {
  padding: 0 24px !important;
  max-height: $box-max-height;
}

div.chroma td:first-of-type {
  padding: 0 18px 0 0;
}

article > pre,
span.katex-display,
div.highlight > pre {
  padding: 21px 24px;
}

article > pre,
span.katex-display,
div.highlight > pre,
div.highlight > div.chroma {
  border: 1px solid $box-border;

  line-height: 1.5rem;
  max-height: $box-max-height;
}



mark,
p code,
li code {
  border-radius: 2px;
  padding: 1px 3px;

  word-break: break-all;
}

p code {
  word-break: break-word;
}

li a {
  word-break: break-all;
}



article > header {
  section.tags {
    
    margin: .9rem 0 .6rem;
    
    ul {
      padding: 0;
    }
    
    li {
      display: inline;
    }

    a {
      display: inline-block;
      
      margin: 0 7.5px 9px 0;
      padding: 6px 15px 9px;
    }
  }
}



ul.posts {
  padding: 0;
  
  li {
    margin: .5rem 0;
  }
  
  a {
    background: var(--accent);
    color: var(--dtl);

    display: flex;
    margin: 15px auto;
    padding: 15px 30px 18px;
    
    text-decoration: none;
    
    align-items: center;
    word-break: break-word;

    p {
      flex: 1;
      margin: 0;
    }
    
    time {
      // HACK
      // Using a background-image as an overlay...
      background-image: linear-gradient(0deg, var(--bgmod), 100%, transparent);
      border-radius: $border-radius;
      
      font-size: .85rem;
      
      margin-left: 1.8rem;
      padding: 0 6px 2px;
    }
  }
}

// Not sure if I like this
@media (max-width: $mobile-breakpoint) {
  ul.posts a {
    flex-direction: column-reverse;
    align-items: unset;
    
    time {
      margin: .3rem 0;
    }
  }
}



span.katex-display {
  border: 1px dashed var(--alt-fg);
  
  overflow-x: auto;
  padding: 15px 30px;
  
  &:focus {
    border: 1px solid $box-border;
  }
}






// MEDIA
img {
  display: block;
  
  max-width: 100%;
  max-height: $box-max-height;

  outline: 3px solid transparent;
  
  transition:
    border-color $change-transition,
    outline-color .3s ease,
    filter $change-transition;

  &.cover {
    border: 1px solid var(--fg);
    
    object-fit: cover;
    width: 100%;
  }
}

article p > img {
  display: block;
  margin: 2rem auto;
  max-width: 100%;
}

figure {
  margin: 1.8rem auto;
  
  img {
    display: block;
    margin: 0 auto;
    max-width: 90%;
  }
  
  figcaption {
    font-size: .85rem;
    text-align: center;
    
    margin: .75rem;
    line-height: 1.5rem;
  }
}

video {
  display: block;
  
  max-width: 91%;
  max-height: $box-max-height;

  outline: 3px solid transparent;
  
  transition:
    border-color $change-transition,
    outline-color .3s ease;
  
  &:focus,
  &:hover {
    border-color: var(--accent);
    outline-color: var(--accent);
  }
  
  &.gifoid {
    margin: 3rem auto;
    max-width: 90%;
  }
}

audio {
  display: block;
  width: 90%;
}

img,
video {
  &.border {
    border: 1px solid var(--fg);
  }

  // Can be used to override the previous rule
  &.borderless {
    border: 0;
  }
}

  
  
  










// Table of Contents
details.toc {
  
  background: var(--alt-bg);
  color: var(--dtl);

  transition:
    background-color $change-transition,
    border $change-transition,
    linear-gradient $change-transition;
    
  summary {
    background: var(--accent);
    border: 1px solid rgba(0,0,0,.3);

    border-radius: $border-radius;
    
    @include button-like;

    font-family: $heading-font;
    
    padding: 15px 30px 18.5px;
    
    outline: 2px dashed transparent;
    outline-offset: 3px;
    
    @include letterpress(var(--lpress));

    cursor: pointer;

    transition:
      color $change-transition,
      opacity .2s ease,
      outline-color .2s ease,
      padding .2s ease;

    &:hover {
      opacity: .75;
    }
    
    &:focus {
      outline-color: var(--accent);
    }
    
  }
  
  &[open] summary {
    border-radius: $border-radius $border-radius 0 0;
    
    box-shadow: inset 0 1px 0 rgba(255,255,255,.2);
    
    padding: 15px 30px;

    ~ * {
      animation: smoothReveal .3s ease-in-out;
    }
  }

  nav#TableOfContents {
    
    border-style: solid;
    border-color: rgba(0,0,0,.3);
    border-width: 0 1px 1px;
    
    border-radius: 0 0 $border-radius $border-radius;
    
    box-shadow: inset 0 -3px 0 rgba(0,0,0,.3);
  
    padding: 6px 15px 15px 9px;

    li {
      &:first-of-type {
        margin-top: .3rem;
      }
    }
    
    ul li,
    ol li {
      &:not(:last-of-type),
      ul li:first-of-type,
      ol li:first-of-type {
        margin-bottom: .3rem;
      }
    }
  }
}

#TableOfContents,
section.footnotes ol,
article > ul,
article > ol {
  line-height: 1.5rem;
}

#TableOfContents ul,
section.footnotes ol {
  padding-left: 24px;
}

article > ul,
article > ul ul,
article > ol,
article > ol ol {
  padding: 0 24px 0;
}

#TableOfContents ul,
article > ul {

  li:before {
    content: '';
    margin-right: 12px; // 9px or 12px

    background: var(--fg);
    border-radius: $border-radius;
    
    @include squared(18px);

    display: inline-block;
    
    // HACK
    // Good grief
    margin-bottom: -3px;
  }
}



// Animation
@keyframes smoothReveal {
  0%    { opacity: 0; }
  100%  { opacity: 1; }
}



// BUTTONS
a.btn,
a.footnote-backref,
section.social a,
input[type=submit] {
  background: var(--accent);
  border: 1px solid rgba(0,0,0,.3);
  color: var(--dtl);
  
  transition:
    background-color $change-transition,
    color $change-transition,
    opacity .2s ease-in-out,
    outline-color .3s ease;
  
  border-radius: $border-radius;

  @include button-like;

  text-decoration: none;
  
  @include letterpress(var(--lpress));
  
  &:hover {
    opacity: .75;
  }
}









{{ if .Site.Taxonomies.categories }}
  // Categories
  li.cats a {
    font-weight: bold;
  }
{{ end }}



ul.tags {
  display: flex;
  flex-wrap: wrap;

  padding: 0;

  a {
    display: flex;
    flex: 1;
    
    align-items: center;
    
    margin: 0 9px 9px 0;
    padding: 7.5px 18px 10.5px;
    
    word-break: keep-all;
    
    span {
      background-image: linear-gradient(0deg, var(--bgmod), 100%, transparent);

      margin-left: .45rem;
      padding: 0 6px 1px;
      
      font-size: .85rem;

      border-radius: $border-radius;
    }
  }
}







ul.pagination { 
  font-family: $body-font;
  font-weight: $body-bold-weight;
  text-align: center;
  
  margin: 3rem auto 1rem;
  padding: 0; // override?
  
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  
  li {
    display: inline-block;
    
    transition:
      background .2s ease-in-out,
      border .2s ease-in-out;

    a,
    &.current p {
      display: block;
      margin: 0 9px 9px 0;
      padding: 7.5px 12px 10.5px;
      
      width: 21px;
    }
    
    a {
      color: var(--dtl);
    }
    
    &.current p {
      background: var(--alt-bg);
      border: 1px solid rgba(0,0,0,.45);
      color: var(--alt-fg);
      
      line-height: inherit;
      
      user-select: none;

      border-radius: $border-radius;
      
      @include button-like;

      @include letterpress(var(--lpress));
    }
  }
  
  svg {
    fill: currentColor;

    @include squared(18px);
    
    display: inline-block;
    
    // HACK
    // SVG vertical align
    margin: auto auto -2px;
  }
}














mark {
  background: var(--accent);
  
  // TODO
  // Not a11y enough
  filter:
    contrast(1.2)
    invert(1);
}

// BUG
// For some reason, the default "dotted" rendering seems broken in Chrome
abbr {
  text-decoration-style: solid;
}

blockquote {
  background: var(--alt-bg);
  border-style: solid;
  border-width: 1px 1px 1px 12px;
  color: var(--alt-fg);

  margin: 2.1rem 1.5rem;
  
  padding: 0 30px;
  
  p {
    margin: 1.2rem 0;
  }
}

kbd {
  background-color: #eee;
  border-radius: $border-radius;
  border: 1px solid #b4b4b4;
  
  box-shadow:
    0 1px 1px rgba(0, 0, 0, .2),
    0 2px 0 0 rgba(255, 255, 255, .7) inset;

  color: #333;
  display: inline-block;
  font-size: .85em;
  font-weight: $body-bold-weight;
  line-height: 1;
  padding: 2px;
  white-space: nowrap;
  
  > kbd {
    margin: 0 2px;
  }
}



// RESPONSIVENESS
main {
  margin: 90px auto;
  max-width: 660px;
  
  padding: 0 15px;
}

article {
  margin: 90px auto 120px;
}



{{ if .Site.Params.Style.hideAnchors }}

  @media (min-width: $mobile-breakpoint) {
    a.anchor:not(:focus) {
      opacity: 0;
    }
    
    %visible {
      opacity: 1;
    }
    
    @for $i from 2 through 6 {
      h#{$i} > a:focus + a.anchor,
      h#{$i}:hover > a.anchor {
        @extend %visible;
      }
    }
  }
  
{{ end }}


p.error {
  color: $error-color;
}

{{ if .Site.Params.hasNoscriptNotice }}
  p.noscript {
    font-weight: bold;
  }
{{ end }}



// Rich Content
{{ if (fileExists "static/css/rich-content.css") }}
  @import '/css/rich-content.css';
{{ else if (fileExists "assets/scss/rich-content.scss") }}
  @import 'rich-content';
{{ end }}


// TODO
// Custom user stuff
// This isn't good enough
{{ if (fileExists "static/css/custom.css") }}
  @import '/css/custom.css';
{{ else if (fileExists "assets/scss/custom.scss") }}
  @import 'custom';
{{ end }}
